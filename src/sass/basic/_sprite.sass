// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$arrow-menu-name: 'arrow_menu'
$arrow-menu-x: 105px
$arrow-menu-y: 42px
$arrow-menu-offset-x: -105px
$arrow-menu-offset-y: -42px
$arrow-menu-width: 13px
$arrow-menu-height: 8px
$arrow-menu-total-width: 127px
$arrow-menu-total-height: 126px
$arrow-menu-image: '../img/sprite.png'
$arrow-menu: (105px, 42px, -105px, -42px, 13px, 8px, 127px, 126px, '../img/sprite.png', 'arrow_menu', )
$basket-name: 'basket'
$basket-x: 105px
$basket-y: 25px
$basket-offset-x: -105px
$basket-offset-y: -25px
$basket-width: 20px
$basket-height: 17px
$basket-total-width: 127px
$basket-total-height: 126px
$basket-image: '../img/sprite.png'
$basket: (105px, 25px, -105px, -25px, 20px, 17px, 127px, 126px, '../img/sprite.png', 'basket', )
$clock-name: 'clock'
$clock-x: 0px
$clock-y: 100px
$clock-offset-x: 0px
$clock-offset-y: -100px
$clock-width: 26px
$clock-height: 26px
$clock-total-width: 127px
$clock-total-height: 126px
$clock-image: '../img/sprite.png'
$clock: (0px, 100px, 0px, -100px, 26px, 26px, 127px, 126px, '../img/sprite.png', 'clock', )
$exchange-name: 'exchange'
$exchange-x: 0px
$exchange-y: 75px
$exchange-offset-x: 0px
$exchange-offset-y: -75px
$exchange-width: 28px
$exchange-height: 25px
$exchange-total-width: 127px
$exchange-total-height: 126px
$exchange-image: '../img/sprite.png'
$exchange: (0px, 75px, 0px, -75px, 28px, 25px, 127px, 126px, '../img/sprite.png', 'exchange', )
$group-name: 'group'
$group-x: 75px
$group-y: 25px
$group-offset-x: -75px
$group-offset-y: -25px
$group-width: 30px
$group-height: 26px
$group-total-width: 127px
$group-total-height: 126px
$group-image: '../img/sprite.png'
$group: (75px, 25px, -75px, -25px, 30px, 26px, 127px, 126px, '../img/sprite.png', 'group', )
$percent-name: 'percent'
$percent-x: 0px
$percent-y: 0px
$percent-offset-x: 0px
$percent-offset-y: 0px
$percent-width: 75px
$percent-height: 75px
$percent-total-width: 127px
$percent-total-height: 126px
$percent-image: '../img/sprite.png'
$percent: (0px, 0px, 0px, 0px, 75px, 75px, 127px, 126px, '../img/sprite.png', 'percent', )
$phone-name: 'phone'
$phone-x: 75px
$phone-y: 51px
$phone-offset-x: -75px
$phone-offset-y: -51px
$phone-width: 18px
$phone-height: 18px
$phone-total-width: 127px
$phone-total-height: 126px
$phone-image: '../img/sprite.png'
$phone: (75px, 51px, -75px, -51px, 18px, 18px, 127px, 126px, '../img/sprite.png', 'phone', )
$truck-name: 'truck'
$truck-x: 75px
$truck-y: 0px
$truck-offset-x: -75px
$truck-offset-y: 0px
$truck-width: 52px
$truck-height: 25px
$truck-total-width: 127px
$truck-total-height: 126px
$truck-image: '../img/sprite.png'
$truck: (75px, 0px, -75px, 0px, 52px, 25px, 127px, 126px, '../img/sprite.png', 'truck', )
$spritesheet-width: 127px
$spritesheet-height: 126px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($arrow-menu, $basket, $clock, $exchange, $group, $percent, $phone, $truck, )
$spritesheet: (127px, 126px, '../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
